version: "3.9"

services:
  consul:
    image: hashicorp/consul:1.17
    container_name: trailbox-consul
    command: agent -server -bootstrap -ui -client=0.0.0.0 -bind=0.0.0.0
    ports:
      - "8500:8500"       # Web UI / API
      - "8600:8600/udp"   # DNS
    healthcheck:
      test: ["CMD", "consul", "info"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: trailbox-postgres
    environment:
      - POSTGRES_USER=trailbox
      - POSTGRES_PASSWORD=trailbox
      - POSTGRES_DB=trailbox
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trailbox -d trailbox"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # =======================
  # USERS (gRPC + health HTTP)
  # =======================
  users:
    build:
      context: .
      dockerfile: services/users/Dockerfile
    container_name: trailbox-users
    environment:
      - PORT=50051
      - SERVICE_NAME=users
      - SERVICE_ADDRESS=users
      - SERVICE_HEALTH_PATH=/health
      - CONSUL_HTTP_ADDR=http://consul:8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=trailbox
      - DB_PASS=trailbox
      - DB_NAME=trailbox
    ports:
      - "8011:50051"   # gRPC externo
      - "8111:8081"    # HTTP health externo (para debug opcional)
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # ROUTES (HTTP)
  # =======================
  routes:
    build:
      context: .
      dockerfile: services/routes/Dockerfile
    container_name: trailbox-routes
    environment:
      - PORT=50051
      - SERVICE_NAME=routes
      - SERVICE_ADDRESS=routes
      - SERVICE_HEALTH_PATH=/health
      - CONSUL_HTTP_ADDR=http://consul:8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=trailbox
      - DB_PASS=trailbox
      - DB_NAME=trailbox
    ports:
      - "8002:50051"
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # WORKOUTS (gRPC + health HTTP)
  # =======================
  workouts:
    build:
      context: .
      dockerfile: services/workouts/Dockerfile
    container_name: trailbox-workouts
    environment:
      - PORT=50051
      - SERVICE_NAME=workouts
      - SERVICE_ADDRESS=workouts
      - SERVICE_HEALTH_PATH=/health
      - CONSUL_HTTP_ADDR=http://consul:8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=trailbox
      - DB_PASS=trailbox
      - DB_NAME=trailbox
    ports:
      - "8003:50051"
      - "8103:8081"
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # REVIEWS (HTTP)
  # =======================
  reviews:
    build:
      context: .
      dockerfile: services/reviews/Dockerfile
    container_name: trailbox-reviews
    environment:
      - PORT=50051
      - SERVICE_NAME=reviews
      - SERVICE_ADDRESS=reviews
      - SERVICE_HEALTH_PATH=/health
      - CONSUL_HTTP_ADDR=http://consul:8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=trailbox
      - DB_PASS=trailbox
      - DB_NAME=trailbox
    ports:
      - "8004:50051"
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # NOTIFICATIONS (HTTP)
  # =======================
  notifications:
    build:
      context: .
      dockerfile: services/notifications/Dockerfile
    container_name: trailbox-notifications
    environment:
      - PORT=50051
      - SERVICE_NAME=notifications
      - SERVICE_ADDRESS=notifications
      - SERVICE_HEALTH_PATH=/health
      - CONSUL_HTTP_ADDR=http://consul:8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=trailbox
      - DB_PASS=trailbox
      - DB_NAME=trailbox
    ports:
      - "8005:50051"
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # MAPS (gRPC + health HTTP)
  # =======================
  maps:
    build:
      context: .
      dockerfile: services/map/Dockerfile
    container_name: trailbox-maps
    environment:
      - PORT=50051
      - SERVICE_NAME=maps
      - SERVICE_ADDRESS=maps
      - SERVICE_HEALTH_PATH=/health
      - CONSUL_HTTP_ADDR=http://consul:8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=trailbox
      - DB_PASS=trailbox
      - DB_NAME=trailbox
    ports:
      - "8006:50051"
      - "8106:8081"
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # LEADERBOARD (gRPC + health HTTP)
  # =======================
  leaderboard:
    build:
      context: .
      dockerfile: services/leaderboard/Dockerfile
    container_name: trailbox-leaderboard
    environment:
      - PORT=50051
      - SERVICE_NAME=leaderboard
      - SERVICE_ADDRESS=leaderboard
      - SERVICE_HEALTH_PATH=/health
      - CONSUL_HTTP_ADDR=http://consul:8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=trailbox
      - DB_PASS=trailbox
      - DB_NAME=trailbox
    ports:
      - "8007:50051"
      - "8107:8081"
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # GATEWAY (HTTP)
  # =======================
  gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
    container_name: trailbox-gateway
    environment:
      - PORT=50051
      - SERVICE_NAME=gateway
      - SERVICE_ADDRESS=gateway
      - SERVICE_HEALTH_PATH=/health
      - CONSUL_HTTP_ADDR=http://consul:8500
    ports:
      - "8080:50051"
    depends_on:
      consul:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # MIGRATOR
  # =======================
  migrator:
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./services/users/internal/migrations:/migrations/users
      - ./services/routes/internal/migrations:/migrations/routes
      - ./services/workouts/internal/migrations:/migrations/workouts
    entrypoint: [
      "sh", "-c",
      "migrate -path=/migrations/users -database postgres://trailbox:trailbox@postgres:5432/trailbox?sslmode=disable up && \
       migrate -path=/migrations/routes -database postgres://trailbox:trailbox@postgres:5432/trailbox?sslmode=disable up && \
       migrate -path=/migrations/workouts -database postgres://trailbox:trailbox@postgres:5432/trailbox?sslmode=disable up"
    ]

volumes:
  pgdata: {}
